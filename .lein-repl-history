(loop [result [] x 5] (if (zero? x) result (recurt (conj result x) (dec x))))
(loop [result [] x 5] (if (zero? x) result (recur (conj result x) (dec x))))
(doc conj)
(doc loop)
(defn indexed [coll] (map vector (iterate inc 0) coll))
(indexed "abcde")
vector
(iterate inc 0)
(doc map)
(map vector "abcde")
(doc iterate)
(doc inc)
(iterate (iterate 0))
(iterate (iterate 0) 0)
(iterate inc (iterate inc 0))
